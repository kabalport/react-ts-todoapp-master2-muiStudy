{"version":3,"sources":["constants/ActionTypes.ts","actions/todos.ts","components/TodoHeader.tsx","components/TodoInput.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/TodoFooter.tsx","components/TodoFilter.tsx","components/Todos.tsx","selectors/todos.ts","containers/TodosContainer.tsx","App.tsx","reportWebVitals.ts","reducers/todos.ts","index.tsx","store/index.ts","Todo.module.css"],"names":["CHANGE_TODO_INPUT","ADD_TODO","TOGGLE_TODO_STATUS","REMOVE_TODO","CLEAR_ALL_TODOS","RESTORE","CHANGE_FILTER","EDIT_TODO","SET_EDITING_ID","RESET_EDITING_ID","changeTodoInput","createAction","input","addTodo","text","done","toggleTodoStatus","id","removeTodo","clearAllTodos","restore","data","changeFilter","filter","editTodo","setEditingId","resetEditingId","TodoHeader","navigationBar","_jsx","AppBar","position","children","Toolbar","_jsxs","Grid","justifyContent","container","item","Typography","variant","className","styles","header","TodoInput","_ref","onInsert","onChangeInput","onSubmit","e","preventDefault","style","marginTop","xs","md","paddingRight","TextField","placeholder","fullWidth","onChange","target","value","Button","height","color","type","TodoItem","todo","onRemove","onToggle","onEdit","_useState","useSelector","state","editingId","useState","_useState2","_slicedToArray","inputText","setInputText","editInput","React","createRef","dispatch","useDispatch","onResetEditingId","useCallback","useEffect","console","log","current","focus","ListItem","Checkbox","checked","ListItemText","InputBase","inputProps","onKeyPress","key","onBlur","ref","multiline","ListItemSecondaryAction","IconButton","onClick","DeleteOutlined","TodoList","todos","Paper","margin","List","map","TodoFooter","onClearAll","_useSelector","nextTodoId","display","alignItems","textAlign","localStorage","setItem","JSON","stringify","TodoFilter","onChangeFilter","handleFilter","Radio","Todos","Container","maxWidth","getFilteredTodos","createSelector","TodosContainer","filteredTodos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_createReducer","_defineProperty","payload","_objectSpread","_ref2","newTodo","concat","_ref3","_ref4","action","_ref5","_ref6","reducer","store","createStore","composeWithDevTools","getItem","parse","loadData","ReactDOM","render","StrictMode","Provider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.cf6b589b.chunk.js","sourcesContent":["export const CHANGE_TODO_INPUT = \"CHANGE_TODO_INPUT\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const TOGGLE_TODO_STATUS = \"TOGGLE_TODO_STATUS\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const CLEAR_ALL_TODOS = \"CLEAR_ALL_TODOS\";\nexport const RESTORE = \"RESTORE\";\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const SET_EDITING_ID = \"SET_EDITING_ID\";\nexport const RESET_EDITING_ID = \"RESET_EDITING_ID\";\n","import { createAction } from \"redux-actions\";\nimport {\n  CHANGE_TODO_INPUT,\n  ADD_TODO,\n  TOGGLE_TODO_STATUS,\n  REMOVE_TODO,\n  CLEAR_ALL_TODOS,\n  RESTORE,\n  CHANGE_FILTER,\n  EDIT_TODO,\n  SET_EDITING_ID,\n  RESET_EDITING_ID,\n} from \"../constants/ActionTypes\";\n\nexport const changeTodoInput = createAction(CHANGE_TODO_INPUT, (input: string) => input);\n\nexport const addTodo = createAction(ADD_TODO, (input: string) => ({\n  text: input,\n  done: false,\n}));\n\nexport const toggleTodoStatus = createAction(TOGGLE_TODO_STATUS, (id: number) => id);\n\nexport const removeTodo = createAction(REMOVE_TODO, (id: number) => id);\n\nexport const clearAllTodos = createAction(CLEAR_ALL_TODOS);\n\nexport const restore = createAction(RESTORE, (data: string) => data);\n\nexport const changeFilter = createAction(CHANGE_FILTER, (filter: string) => filter);\n\nexport const editTodo = createAction(EDIT_TODO, (id: number, input: string) => ({\n  id,\n  input,\n}));\n\nexport const setEditingId = createAction(SET_EDITING_ID, (id: number) => id);\n\nexport const resetEditingId = createAction(RESET_EDITING_ID);\n","import styles from \"../Todo.module.css\";\nimport {\n    Container,\n    List,\n    Paper,\n    Grid,\n    Button,\n    AppBar,\n    Toolbar,\n    Typography,\n} from \"@mui/material\";\n\nconst TodoHeader = () => {\n    // navigationBar 추가\n    let navigationBar = (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Grid justifyContent=\"space-between\" container>\n                    <Grid item>\n                        <Typography variant=\"h6\">오늘의 할일</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h6\">리액트 공부</Typography>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    );\n\n\n  return (\n    <div className={styles.header}>\n        {navigationBar} {/* 네비게이션 바 렌더링 */}\n       {/*<h1>TODO Application</h1>*/}\n     </div>\n  );\n};\n\nexport default TodoHeader;\n","import Paper from \"@mui/material/Paper\";\nimport React from \"react\";\nimport styles from \"../Todo.module.css\";\nimport {Button, Grid, TextField} from \"@mui/material\";\n\ninterface Props {\n  readonly input: string;\n  readonly onInsert: (input: string) => void;\n  readonly onChangeInput: (input: string) => void;\n}\n\nconst TodoInput = ({ input, onInsert, onChangeInput }: Props) => {\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    onInsert(input);\n    onChangeInput(\"\");\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => onChangeInput(e.target.value);\n\n  return (\n\n\n   // <div className={styles.input}>\n      <div>\n        <form onSubmit={onSubmit}>\n        <Grid container style={{ marginTop: 20 }}>\n          <Grid xs={11} md={11} item style={{ paddingRight: 16 }}>\n            <TextField placeholder=\"Add Todo here\" fullWidth\n                       onChange={onChange}\n                       value={input}/>\n          </Grid>\n          <Grid xs={1} md={1} item >\n            <Button fullWidth style={{ height: '100%' }} color=\"secondary\" variant=\"outlined\" type=\"submit\">\n              +\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n\n  );\n};\n\nexport default TodoInput;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styles from \"../Todo.module.css\";\nimport { Todo } from \"../App\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setEditingId, resetEditingId } from \"../actions/todos\";\nimport { TodoState } from \"../reducers/todos\";\nimport ListItem from \"@mui/material/ListItem\";\nimport {Checkbox, IconButton, InputBase, ListItemSecondaryAction, ListItemText} from \"@mui/material\";\nimport DeleteOutlined from \"@mui/icons-material/DeleteOutlined\";\n\ninterface Props {\n  readonly todo: Todo;\n  readonly onRemove: (id: number) => void;\n  readonly onToggle: (id: number) => void;\n  readonly onEdit: (id: number, input: string) => void;\n}\n\nconst TodoItem = ({ todo, onRemove, onToggle, onEdit }: Props) => {\n  const { id, text, done } = todo;\n\n  const { editingId } = useSelector((state: TodoState) => ({\n    editingId: state.editingId,\n  }));\n\n\n  const showInput = (id === editingId);\n\n  const [inputText, setInputText] = useState(\"\");\n\n  const editInput: React.RefObject<HTMLInputElement> = React.createRef();\n\n  const dispatch = useDispatch();\n\n  const onSetEditingId = useCallback((id) => dispatch(setEditingId(id)), [dispatch]);\n  const onResetEditingId = useCallback(() => dispatch(resetEditingId()), [dispatch]);\n\n  const onDoubleClick = () => {\n    console.log(\"onDoubleClick\");\n\n    onSetEditingId(id);\n\n    setInputText(text);\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"onChange \" + e.target.value);\n\n    setInputText(e.target.value);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\") {\n      console.log(\"handleKeyPress Enter inputText : \" + inputText);\n\n      onEdit(id, inputText);\n\n      onResetEditingId();\n    }\n  };\n\n  const handleBlur = () => {\n    console.log(\"handleBlur inputText : \" + inputText);\n\n    onResetEditingId();\n  };\n\n  useEffect(() => {\n    console.log(\"useEffect todo = \" + todo);\n\n    if (todo) {\n      console.log(\"todo.text = \" + todo.text);\n\n      setInputText(todo.text);\n    }\n  }, [todo]);\n\n  useEffect(() => {\n    if (editInput.current) {\n      editInput.current.focus();\n    }\n  }, [editInput]);\n\n  return (\n    // <div className={styles.item}>\n      <div>\n\n\n      <ListItem>\n        <Checkbox checked={done}\n                  onChange={() => onToggle(id)} />\n        <ListItemText>\n          <InputBase\n              inputProps={{\n                \"aria-label\": \"naked\",\n                }}\n              // onClick={turnOffReadOnly}\n              // onKeyDown={turnOnReadOnly}\n              onKeyPress={handleKeyPress}\n              onBlur={handleBlur}\n              onChange={onChange}\n              ref={editInput}\n              type=\"text\"\n\n              value={inputText}\n              multiline={true}\n              fullWidth={true}\n          />\n        </ListItemText>\n        <ListItemSecondaryAction>\n          <IconButton aria-label=\"Delete Todo\"\n                      onClick={() => onRemove(id)} >\n            <DeleteOutlined />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n\n\n      {/*<input type=\"checkbox\" checked={done} onChange={() => onToggle(id)} />*/}\n      {/*{showInput && (*/}\n      {/*  <input*/}\n      {/*    value={inputText}*/}\n      {/*    onChange={onChange}*/}\n      {/*    onKeyPress={handleKeyPress}*/}\n      {/*    onBlur={handleBlur}*/}\n      {/*    ref={editInput}*/}\n      {/*  />*/}\n      {/*)}*/}\n      {/*{!showInput && <span onDoubleClick={onDoubleClick}>{text}</span>}*/}\n      {/*<button onClick={() => onRemove(id)}>삭제</button>*/}\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import TodoItem from \"./TodoItem\";\nimport styles from \"../Todo.module.css\";\nimport { Todo } from \"../App\";\nimport Paper from \"@mui/material/Paper\";\nimport {List} from \"@mui/material\";\n\ninterface Props {\n  readonly todos?: Todo[];\n  readonly onRemove: (id: number) => void;\n  readonly onToggle: (id: number) => void;\n  readonly onEdit: (id: number, input: string) => void;\n}\n\nconst TodoList = ({ todos, onRemove, onToggle, onEdit }: Props) => {\n  return (\n      <Paper style={{ margin: 16 }}>\n        <List>\n          <div>\n        {/*<div className={styles.list}>*/}\n      {todos && todos.map((todo) => (\n        <TodoItem\n          todo={todo}\n          key={todo.id}\n          onRemove={onRemove}\n          onToggle={onToggle}\n          onEdit={onEdit}\n        />\n      ))}\n    </div>\n        </List>\n      </Paper>\n  );\n};\n\nexport default TodoList;\n","import styles from \"../Todo.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { TodoState } from \"../reducers/todos\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport {Grid} from \"@mui/material\";\n\ninterface Props {\n  readonly onClearAll: () => void;\n}\n\nconst TodoFooter = ({ onClearAll }: Props) => {\n  const { todos, nextTodoId } = useSelector((state: TodoState) => ({\n    todos: state.todos,\n    nextTodoId: state.nextTodoId,\n  }));\n\n  const data = {\n    todos,\n    nextTodoId,\n  };\n\n  const onSave = () => {\n    localStorage.setItem('todo-app-data', JSON.stringify(data))\n  };\n\n  return (\n      <div style={{ display: 'flex', justifyContent: 'right', alignItems: 'center' }}>\n          <Grid container style={{ marginTop: 20 }}>\n              <Grid item style={{ paddingRight: 15, textAlign: 'center' }}>\n                  <Button variant=\"contained\" color=\"error\" onClick={onClearAll} fullWidth>\n                      모두 삭제\n                  </Button>\n              </Grid>\n              <Grid item style={{ textAlign: 'center' }}>\n                  <Button variant=\"contained\" color=\"success\" onClick={onSave} fullWidth>\n                      저장\n                  </Button>\n              </Grid>\n          </Grid>\n          {/* <div className={styles.footer}>*/}\n          {/*  <button onClick={onClearAll}>모두 삭제</button>*/}\n          {/*  <button onClick={onSave}>저장</button>*/}\n      </div>\n\n  );\n};\n\nexport default TodoFooter;\n","import FormControl from \"@mui/material/FormControl\";\nimport React from \"react\";\nimport styles from \"../Todo.module.css\";\nimport {FormControlLabel, FormLabel, Radio, RadioGroup} from \"@mui/material\";\n\ninterface Props {\n  readonly filter: string;\n  readonly onChangeFilter: (filter: string) => void;\n}\n\nconst TodoFilter = ({ filter, onChangeFilter }: Props) => {\n  const handleFilter = (e: React.ChangeEvent<HTMLInputElement>) => onChangeFilter(e.target.value);\n  \n  return (\n    <div className={styles.filter}>\n\n        <Radio\n            checked={filter === \"ALL\"}\n            onChange={handleFilter}\n            value=\"ALL\"\n            // name=\"radio-buttons\"\n            // inputProps={{ 'aria-label': 'A' }}\n        />전체\n        <Radio\n            checked={filter === \"A\"}\n            onChange={handleFilter}\n            value=\"A\"\n            // name=\"radio-buttons\"\n            // inputProps={{ 'aria-label': 'B' }}\n        />미완료\n        <Radio\n            checked={filter === \"B\"}\n            onChange={handleFilter}\n            value=\"B\"\n\n            // name=\"radio-buttons\"\n            // inputProps={{ 'aria-label': 'B' }}\n        />완료\n\n\n      {/*<input*/}\n      {/*  type=\"radio\"*/}\n      {/*  value=\"ALL\"*/}\n      {/*  checked={filter === \"ALL\"}*/}\n      {/*  onChange={handleFilter}*/}\n      {/*/>*/}\n      {/*전체*/}\n      {/*<input*/}\n      {/*  type=\"radio\"*/}\n      {/*  value=\"A\"*/}\n      {/*  checked={filter === \"A\"}*/}\n      {/*  onChange={handleFilter}*/}\n      {/*/>*/}\n      {/*미완료*/}\n      {/*<input*/}\n      {/*  type=\"radio\"*/}\n      {/*  value=\"B\"*/}\n      {/*  checked={filter === \"B\"}*/}\n      {/*  onChange={handleFilter}*/}\n      {/*/>*/}\n      {/*완료*/}\n    </div>\n  );\n};\n\nexport default TodoFilter;\n","import TodoHeader from \"./TodoHeader\";\nimport TodoInput from \"./TodoInput\";\nimport TodoList from \"./TodoList\";\nimport TodoFooter from \"./TodoFooter\";\nimport { Todo } from \"../App\";\nimport TodoFilter from \"./TodoFilter\";\nimport Container from \"@mui/material/Container\";\n\ninterface Props {\n  readonly input: string;\n  readonly todos?: Todo[];\n  readonly onRemove: (id: number) => void;\n  readonly onToggle: (id: number) => void;\n  readonly onClearAll: () => void;\n  readonly onInsert: (input: string) => void;\n  readonly onChangeInput: (input: string) => void;\n  readonly filter: string;\n  readonly onChangeFilter: (filter: string) => void;\n  readonly onEdit: (id: number, input: string) => void;\n}\n\nconst Todos = ({\n  input,\n  todos,\n  onChangeInput,\n  onInsert,\n  onToggle,\n  onRemove,\n  onClearAll,\n  filter,\n  onChangeFilter,\n  onEdit,\n}: Props) => {\n  return (\n    <div>\n      <TodoHeader />\n        <Container maxWidth=\"md\">\n      <TodoInput\n        input={input}\n        onInsert={onInsert}\n        onChangeInput={onChangeInput}\n      ></TodoInput>\n      <TodoFilter filter={filter} onChangeFilter={onChangeFilter} />\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle} onEdit={onEdit} />\n      <TodoFooter onClearAll={onClearAll} />\n      </Container>\n    </div>\n  );\n};\n\nexport default Todos;\n","import { createSelector } from \"reselect\";\nimport { TodoState } from \"../reducers/todos\";\n\nconst getTodos = (state: TodoState) => state.todos;\nconst getFilter = (state: TodoState) => state.filter;\n\nexport const getFilteredTodos = createSelector(\n  [getTodos, getFilter],\n  (todos, filter) => {\n    if (filter === \"ALL\") {\n      return todos;\n    }\n\n    if (filter === \"A\") {\n      return todos.filter((todo) => {\n        return todo.done === false;\n      });\n    }\n\n    if (filter === \"B\") {\n      return todos.filter((todo) => {\n        return todo.done === true;\n      });\n    }\n  }\n);\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  changeTodoInput,\n  addTodo,\n  toggleTodoStatus,\n  removeTodo,\n  clearAllTodos,\n  changeFilter,\n  editTodo,\n} from \"../actions/todos\";\nimport Todos from \"../components/Todos\";\nimport { TodoState } from \"../reducers/todos\";\nimport { getFilteredTodos } from \"../selectors/todos\";\n\nconst TodosContainer = () => {\n  const { input, filter, filteredTodos } = useSelector((state: TodoState) => ({\n    input: state.input,\n    filter: state.filter,\n    filteredTodos: getFilteredTodos(state),\n  }));\n  \n  const dispatch = useDispatch();\n\n  const onChangeInput = useCallback((input) => dispatch(changeTodoInput(input)), [dispatch]);\n  const onInsert = useCallback((input) => dispatch(addTodo(input)), [dispatch]);\n  const onToggle = useCallback((id) => dispatch(toggleTodoStatus(id)), [dispatch]);\n  const onRemove = useCallback((id) => dispatch(removeTodo(id)), [dispatch]);\n  const onClearAll = useCallback(() => dispatch(clearAllTodos()), [dispatch]);\n  const onChangeFilter = useCallback((filter) => dispatch(changeFilter(filter)),[dispatch]);\n  const onEdit = useCallback((id, input) => dispatch(editTodo(id, input)), [dispatch]);\n\n  return (\n    <Todos\n      input={input}\n      todos={filteredTodos}\n      onChangeInput={onChangeInput}\n      onInsert={onInsert}\n      onToggle={onToggle}\n      onRemove={onRemove}\n      onClearAll={onClearAll}\n      filter={filter}\n      onChangeFilter={onChangeFilter}\n      onEdit={onEdit}\n    />\n  );\n};\n\nexport default TodosContainer;\n","import TodosContainer from \"./containers/TodosContainer\";\n\nexport interface Todo {\n  id: number;\n  text: string;\n  done: boolean;\n}\n\nfunction App() {\n  return <TodosContainer />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Todo } from \"../App\";\nimport { createReducer } from \"typesafe-actions\"\nimport {\n  CHANGE_TODO_INPUT,\n  ADD_TODO,\n  TOGGLE_TODO_STATUS,\n  REMOVE_TODO,\n  CLEAR_ALL_TODOS,\n  RESTORE,\n  CHANGE_FILTER,\n  EDIT_TODO,\n  SET_EDITING_ID,\n  RESET_EDITING_ID,\n} from \"../constants/ActionTypes\";\n\nexport interface TodoState {\n  input: string;\n  todos: Todo[];\n  nextTodoId: number;\n  filter: string;\n  editingId: number;\n}\n\nconst initialState: TodoState = {\n  input: \"\",\n  todos: [],\n  nextTodoId: 1,\n  filter: \"ALL\",\n  editingId: 0,\n};\n\nconst todos = createReducer(\n  initialState,\n  {\n    [CHANGE_TODO_INPUT]: (state, { payload: input }) => ({\n      ...state,\n      input: input,\n    }),\n    [ADD_TODO]: (state, { payload: todo }) => {\n      const newTodo = {...todo, id: state.nextTodoId};\n      const nextTodoId = state.nextTodoId + 1;\n\n      return ({\n        ...state,\n        todos: state.todos.concat(newTodo),\n        nextTodoId\n      })\n    },\n    [TOGGLE_TODO_STATUS]: (state, { payload: id }) => ({\n      ...state,\n      todos: state.todos.map((todo) =>\n        todo.id === id ? { ...todo, done: !todo.done } : todo\n      ),\n    }),\n    [REMOVE_TODO]: (state, { payload: id }) => ({\n      ...state,\n      todos: state.todos.filter((todo) => todo.id !== id),\n    }),\n    [CLEAR_ALL_TODOS]: (state, action) => ({\n      ...state,\n      todos: [],\n    }),\n    [RESTORE]: (state, action) => {\n      console.log(action);\n      console.log(action.payload.todos);\n      console.log(action.payload.nextTodoId);\n      return ({\n        ...state,\n        todos: action.payload.todos,\n        nextTodoId: action.payload.nextTodoId,\n      })\n    },\n    [CHANGE_FILTER]: (state, { payload: filter }) => ({\n      ...state,\n      filter: filter,\n    }),\n    [EDIT_TODO]: (state, action) => ({\n      ...state,\n      todos: state.todos.map((todo) =>\n        todo.id === action.payload.id ? { ...todo, text: action.payload.input } : todo\n      ),\n    }),\n    [SET_EDITING_ID]: (state, { payload: id }) => ({\n      ...state,\n      editingId: id,\n    }),\n    [RESET_EDITING_ID]: (state) => ({\n      ...state,\n      editingId: 0,\n    }),\n  }\n);\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport todos from \"./reducers/todos\";\nimport { restore } from \"./actions/todos\";\nimport configureStore from \"./store\";\n\nconst store = configureStore(todos);\n\nfunction loadData() {\n  try {\n    const data = localStorage.getItem(\"todo-app-data\");\n    console.log(\"loadData data : \" + data);\n\n    if (!data) return;\n\n    store.dispatch(restore(JSON.parse(data)));\n\n  } catch (e) {\n    console.log(\"localStorage is not working\");\n  }\n}\n\nloadData();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","import { createStore, Reducer } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport default function configureStore(reducer: Reducer) {\n  return createStore(reducer, composeWithDevTools());\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Todo_input__2_WyA\",\"item\":\"Todo_item__3bfUo\",\"header\":\"Todo_header__2-CqG\",\"footer\":\"Todo_footer__QdWEV\",\"list\":\"Todo_list__1keV2\"};"],"sourceRoot":""}